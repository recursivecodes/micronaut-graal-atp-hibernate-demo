buildscript {
    dependencies {
        classpath "org.hibernate:hibernate-gradle-plugin:5.4.0.Final"
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
}

apply plugin: 'org.hibernate.orm'

version "0.1"
group "codes.recursive"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.2.0.BUILD-SNAPSHOT'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut:micronaut-inject-java"
    compile "io.micronaut:micronaut-validation"

    /* Start Hibernate */
    annotationProcessor "javax.persistence:javax.persistence-api:2.2"

    compile "io.micronaut.configuration:micronaut-hibernate-jpa", {
        exclude group:'io.micronaut.configuration', module:'micronaut-hibernate-validator'
    }
    compile 'io.micronaut.configuration:micronaut-jdbc-tomcat'
    implementation fileTree(dir: 'libs', include: ['*.jar']) // local dependencies for ojdbc
    compile 'xerces:xercesImpl:2.12.0'
    /* End Hibernate */
    
    /* Start OpenAPI */
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    compile "io.swagger.core.v3:swagger-annotations"
    /* End OpenAPI */
    
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-server-netty"
    compileOnly "com.oracle.substratevm:svm"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "codes.recursive.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

hibernate {
    enhance {
        enableLazyInitialization= true
        enableDirtyTracking = true
        enableAssociationManagement = true
        enableExtendedEnhancement = true
    }
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

task myRun(type: JavaExec){
    classpath sourceSets.main.runtimeClasspath
    main = mainClassName
    systemProperties = System.properties
}
task copyResources(type:Copy) {
    from "build-resource"
    into "build"
}

assemble.dependsOn copyResources